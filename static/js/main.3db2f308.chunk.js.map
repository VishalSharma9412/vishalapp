{"version":3,"sources":["ToDoList.jsx","App.jsx","index.js"],"names":["ToDolist","props","className","onClick","onSelect","id","text","App","useState","inputList","setInputList","Items","setItems","deleteItems","console","log","oldItems","filter","arrElem","index","onChange","e","target","value","type","placeholder","map","itemVal","ReactDOM","render","document","getElementById"],"mappings":"mLAqBeA,EAnBE,SAACC,GAGZ,OACE,mCACI,sBAAKC,UAAU,aAAf,UACI,mBAAGC,QAAU,WACTF,EAAMG,SAASH,EAAMI,KAErBH,UAAU,cACV,cAAY,SAGhB,mCAAMD,EAAMK,KAAZ,aC6CDC,EAzDH,WACR,MAAkCC,qBAAlC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAiBMC,EAAc,SAACR,GACjBS,QAAQC,IAAI,6BACZH,GAAS,SAACI,GACN,OAAOA,EAASC,QAAO,SAACC,EAASC,GAGjC,OAAOA,IAAUd,SAMzB,OAAQ,mCACJ,qBAAKH,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBACA,6CACA,uBACA,uBAAOkB,SAjCD,SAACC,GACfX,EAAaW,EAAEC,OAAOC,QAgCcA,MAAOd,EAAWe,KAAK,OAAOC,YAAY,eACtE,wBAAQtB,QA9BA,WAChBS,GAAS,SAACI,GAGN,MAAM,GAAN,mBAAWA,GAAX,CAAqBP,OAGzBC,EAAa,KAuBL,iBACA,6BAKKC,EAAMe,KAAI,SAACC,EAASR,GACjB,OAAO,cAAC,EAAD,CAAUb,KAAMqB,EAGnBtB,GAAIc,EACJf,SAAUS,GAFLM,gB,MC7CjCS,IAASC,OACP,mCACA,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.3db2f308.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst ToDolist = (props) => {\r\n    // return  <li> {itemVal} </li> ---> \" <li> {props.text} </li> \"\r\n      \r\n      return (\r\n        <>\r\n            <div className=\"todo_style\">\r\n                <i onClick= {() =>{\r\n                    props.onSelect(props.id) // to find the element for which we are clicking the delete button\r\n                }}\r\n                    className=\"fa fa-times\"\r\n                    aria-hidden=\"true\"\r\n\r\n                />\r\n                <li> {props.text} </li>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToDolist;\r\n\r\n// \"<li> {props.text} </li>\" as we have added custom props in the Todolist component in the app.jsx \r\n\r\n//   <i  onClick=\"deleteItems\" className=\"fa fa-times\" aria-hidden=\"true\"/>  ----> its the delete button ","import React, { useState } from \"react\"\r\nimport ToDolist from \"./ToDoList\";\r\n\r\nconst App = () => {\r\n    const [inputList, setInputList] = useState(); // were we enter the value\r\n    const [Items, setItems] = useState([]);// for saving the data enter in the below list in the form of array\r\n\r\n    const itemEvent = (e) => {\r\n        setInputList(e.target.value);\r\n    }\r\n\r\n    const listOfItems = () => {\r\n        setItems((oldItems) => { // now acccessing all the data from the useState([]) \r\n            // on when we click the button the data gets transfered from the inputList \"entering\" -----> to Item \"list shown\"\r\n\r\n            return [...oldItems, inputList]; // showing the olddata with the new entered data\r\n            // OP ---> State:[\"buy apple\", \"buy bat\"] ---> now the new array has been created\r\n        });\r\n        setInputList(\"\"); // to empty the entering column after we click the button. we empty the \"setinputList\" which automatically empty the --> current data that is \"inputList\" and so the entering list again becomes empty\r\n    };\r\n\r\n\r\n    const deleteItems = (id) => {\r\n        console.log(\"clicked the delete button\")\r\n        setItems((oldItems) => {\r\n            return oldItems.filter((arrElem, index) => { // added the PD func that is filter ----> that will filter the deleted data and then we will show the remaining data oldItems with the spreadOPerator\r\n                // here arrElem ---> will store the data of that perticular element and \"index\" ---> will store the index of that elemnet\r\n                 \r\n            return index !== id; // the left out that didnt matched will be returned out in the old array // and automatically the matched on ( filtered ) will be deleted \r\n            })\r\n        })\r\n    };\r\n\r\n\r\n    return (<>\r\n        <div className=\"main_div\">\r\n            <div className=\"center_div\">\r\n                <br />\r\n                <h1> ToDo List </h1>\r\n                <br />\r\n                <input onChange={itemEvent} value={inputList} type=\"text\" placeholder=\"Add a item\" />\r\n                <button onClick={listOfItems}> + </button>\r\n                <ol>\r\n                    {/* <li> {inputList} </li> */}\r\n                    {/* // Now setting the array to show the list one by one */}\r\n                    {/* using the map method with the array to render the items entered in the list format  */}\r\n\r\n                    {Items.map((itemVal, index) => { // calling the empty array declared above and then filling it with the itemVal // // used props here with the ToDoList component as the itemVal was showing undeclared\r\n                        return <ToDolist text={itemVal}\r\n                            // below props are used as we are using the delete func also and for that we need index of the deleted item\r\n                            key={index}\r\n                            id={index}\r\n                            onSelect={deleteItems} />\r\n                    })}\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    </>)\r\n\r\n};\r\nexport default App;","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App.jsx\"\nimport './index.css'\n\nReactDOM.render(\n  <>\n  <App /> \n  </>,\n  \ndocument.getElementById(\"root\"));\n\n"],"sourceRoot":""}